/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/
process {
  withName: 'BLASTN' {
    ext.args = '-evalue 1e-6 -outfmt "6 qaccver saccver pident length mismatch gapopen qstart qend sstart send evalue bitscore qlen slen stitle"'
    publishDir = [
      [
        path: { "${params.outdir}/blast" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }

  withName: 'BCFTOOLS_CONSENSUS' {
    ext.args = ''
    publishDir = [
      [
        path: { "${params.outdir}/consensus" },
        mode: params.publish_dir_mode,
        pattern: "*.fasta",
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ],
      [
        path: { "${params.outdir}/consensus/vcf" },
        mode: params.publish_dir_mode,
        pattern: "*.vcf.gz",
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }

  withName: 'BCFTOOLS_FILTER.*' {
    ext.args = ''
    publishDir = [
      [
        path: { "${params.outdir}/variants/${sample}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }

  withName: 'BCFTOOLS_STATS' {
    ext.args = ''
    publishDir = [
      [
        path: { "${params.outdir}/variants/bcftools_stats" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }

  withName: 'CHECK_SAMPLE_SHEET' {
    ext.args = ''
    publishDir = [
      [
        path: { "${params.outdir}/pipeline_info" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }

  withName: 'EDLIB_ALIGN' {
    ext.args = ''
    publishDir = [
      [
        path: { "${params.outdir}/consensus/edlib" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }

  withName: 'MASH_SCREEN' {
    ext.args = ''
    publishDir = [
      [
        path: { "${params.outdir}/mash_screen" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }

  withName: 'MOSDEPTH_GENOME' {
    publishDir = [
      [
        path: { "${params.outdir}/mosdepth/${sample}" },
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        mode: params.publish_dir_mode
      ]
    ]
  }

  withName: 'MULTIQC' {
    ext.args = ''
    publishDir = [
      [
        path: { "${params.outdir}/multiqc" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }
  

  withName: 'OUTPUT_DOCS' {
    ext.args = ''
    publishDir = [
      [
        path: { "${params.outdir}/pipeline_info" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }
  

  withName: 'SAMPLE_INFO_FROM_BAM' {
    ext.args = ''
    publishDir = [
      [
        path: { "${params.outdir}/bam_sample_info" },
        pattern: "*.tsv",
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }

  withName: 'SAMTOOLS_DEPTH' {
    ext.args = ''
    publishDir = [
      [
        path: { "${params.outdir}/samtools/depth" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }

  withName: 'SAMTOOLS_FASTQ' {
    ext.args = ''
    publishDir = [
      [
        path: { "${params.outdir}/reads/fastq" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }

  withName: 'SAMTOOLS_STATS' {
    ext.args = ''
    publishDir = [
      [
        path: { "${params.outdir}/samtools/${sample}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }

  withName: 'TMAP' {
    ext.args = '-i bam -o 2 -u -v --do-realign --prefix-exclude 5 -Y -J 25 --end-repair 15 --do-repeat-clip --context stage1 map4'
    publishDir = [
      [
        path: { "${params.outdir}/tmap" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }

  withName: 'TVC' {
    ext.args = '--disable-filters --allow-complex'
    publishDir = [
      [
        path: { "${params.outdir}/tvc/${sample}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }
}